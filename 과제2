#define _CRT_SECURE_NO_WARNINGS#정의 _CRT_SECURE_NO_WARNING
#include <stdio.h>#include <stdio.h>
#include <string.h>#include <끈.h>
#include <ctype.#include <c타입.h>h>

#define MAX_BOOKS 100#define MAX_BOOKS 100
#define MAX_TITLE_LENGTH 50#defin MAX_TITLE_LENGTH 50
#define MAX_AUTHORS_LENGTH 50#MAX_AUTHOR_LENGTH 50 정의
#define MAX_PRESS_LENGTH 50#defin MAX_PRESS_LENGTH 50

typedef struct {디프스트릭트 { 입력
    char title[    작위[작위]MAX_TITLE_LENGTH];MAX_TITLE_LENGTH];
    char authors[    작자들[작가들]MAX_AUTHORS_LENGTH];MAX_AUTHORS_LENGTH];
    char press[    매력적인[매력적인]MAX_PRESS_LENGTH];MAX_PRESS_LENGTH];
    int page;    인페이지;
    int price;    가격으로
    char borrow[12];    차를 빌리다[12];
} Book;} 책;

Book books[책[책]MAX_BOOKS] = {MAX_BOOKS] = {
   {"Truth", "John", "Century", 300, 20000, "available"},   {"진실", "존", "세기", 300, 200,000, "사용 가능"},
    {"Love", "Paul", "Goods", 200, 15000, "available"},    {"Love", "Paul", "Goods", 200, 15000, "사용 가능"},
    {"Joy", "James", "cookie", 250, 18000, "available"},    {"조이", "제임스", "쿠키", 250, 18000, "사용 가능"},
    {"Thanks", "Mark", "Saejong", 240, 21000, "available"},    {"Thanks", "Mark", "Saejong", 240, 21000, "사용 가능"},
    {"God", "Johnson", "Jungjo", 450, 35000, "available"}    {"신", "존슨", "중조", 450, 35000, "사용 가능"}
};};

int numBooks = 5;intumBooks = 5;

int strcasecmp_custom(const char* s1, const char* s2) {instrcasecmp_custom(const char* s1, const char* s2) {
 while (*s1 && *s2) { (*s1 & & *s2) { 동안
        int diff = tolower(*s1) - tolower(*s2);        intiff = 로어 (*1) - 로어 (*2);
 if (diff != 0) { (diff != 0) {일 경우
            return diff;            반송 diff;
        }        }
        s1++;        s1++;
        s2++;        s2++;
    }    }    }    }
    return *s1 - *s2;    반환 *s1 - *s2;    return *s1 - *s2;    반환 *s1 - *s2;
}}}}

void displayBooks() {void displayBooks() {void displayBooks() {void displayBooks() {
    printf("\nTitle\t printf("\nTitle\t    printf("\nTitle\t printf("\nTitle\tAuthors\tPress\tPage\tPrice\tborrow\n");저자\tPage\tPage\tPrice\tborrow\n");저자\tPage\tPage\tPrice\tborrow\n");저자\tPage\tPage\tPrice\tborrow\n");
    printf("------------------------------------------------\n");    printf ("------------------------------------------------------------------------------------------------\n";    printf ("------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 for (int i = 0; i < numBooks; ++i) { (inti = 0; i < numBooks; ++i) {에 대하여 (inti = 0; i < numBooks; ++i) { (inti = 0; i < numBooks; ++i) {에 대하여
        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].title, books[i].제목, 책[i]제목, 책[i]authors, books[i].제목, 책[i]authors, 책[i]저자, 책[i]press,누르다,저자, 책[i]press,누르다,
            books[i].            책[i]            책[i]page, books[i].            책[i]page, books[i].페이지, 책[i]price, books[i].페이지, 책[i]price, books[i].가격, 책[i]borrow);가격, 책[i]borrow);빌림);빌림);
    }    }    }    }
}}}}

void searchBook() {void searchBook() {void searchBook() {void searchBook() {
    char searchTitle[MAX_TITLE_LENGTH];    char searchTitle [MAX_TITLE_LENGTH];
    printf("검색할 책의 제목을 입력하세요: ");    printf("검색할 책의 제목을 입력하세요: ");
    scanf("%s", searchTitle);    scanf("%s", searchTitle);

    int found = 0;    intfound = 0;
    printf("\nTitle\t    printf("\nTitle\tAuthors\tPress\tPage\tPrice\tborrow\n");저자\tPage\tPage\tPrice\tborrow\n");
    printf("------------------------------------------------\n");    printf ("------------------------------------------------------------------------------------------------\n";

 for (int i = 0; searchTitle[i] != '\0'; ++i) { (inti = 0; searchTitle[i] != '\0'; ++i) {
        searchTitle[i] = tolower(searchTitle[i]);        searchTitle[i] = to lower(searchTitle[i]);
    }

    for (int i = 0; i < numBooks; ++i) {
        char tempTitle[MAX_TITLE_LENGTH];
        strcpy(tempTitle, books[i].title);

        for (int j = 0; tempTitle[j] != '\0'; ++j) {
            tempTitle[j] = tolower(tempTitle[j]);
        }

        if (strstr(tempTitle, searchTitle) != NULL) {
            printf("%s\t%s\t%s\t%d\t%d\tavailable\n", books[i].title, books[i].authors,
                books[i].press, books[i].page, books[i].price);
            found = 1;
        }
    }

    if (!found) {
        printf("해당하는 책이 없습니다.\n");
    }
}

void borrowBook() {
    char borrowTitle[MAX_TITLE_LENGTH];
    printf("대출할 책의 제목을 입력하세요: ");
    scanf("%s", borrowTitle);

    int found = 0;
    for (int i = 0; i < numBooks; ++i) {
        if (strcasecmp_custom(books[i].title, borrowTitle) == 0) {
            if (strcmp(books[i].borrow, "available") == 0) {
                printf("대출 되었습니다.\n");
                strcpy(books[i].borrow, "borrowing");
            }
            else {
                printf("대출 중이라 대출 할 수 없습니다.\n");
            }
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("해당하는 책이 없거나 보유하고 있지 않습니다.\n");
    }
}

void returnBook() {
    char returnTitle[MAX_TITLE_LENGTH];
    printf("반납할 책의 제목을 입력하세요: ");
    scanf("%s", returnTitle);

    int found = 0;
    for (int i = 0; i < numBooks; ++i) {
        if (strcasecmp_custom(books[i].title, returnTitle) == 0) {
            if (strcmp(books[i].borrow, "borrowing") == 0) {
                printf("책이 반납 되었습니다.\n");
                strcpy(books[i].borrow, "available");
            }            }
 else { 그 외 {
                printf("대출 되지 않은 책입니다.\n");                printf("대출 되지 않은 책입니다.\n");
            }            }
            found = 1;            발견된 = 1;
 break; 깨짐;
        }        }
    }    }

 if한다면 (!found) { 만약 (!found) {한다면(!found) { 만약(!found) {일 경우
        printf("활자로 인쇄한활자로 인쇄한""""""""""""해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.\n\n\n\n"""""""""""""""");        printf(""); printf"); printf"""""""""""해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.해당하는 책이 없거나 보유하고 있지 않습니다.\n\n\n\n\n\n\n\n""""""""""""""""););););
    }    }}    }}    }}    }
}}}}}}}}


void showMenu() {void showMenu() {void showMenu() {void showMenu() {void showMenu() {void showMenu() {void showMenu() {void showMenu() {
    printf("활자로 인쇄한활자로 인쇄한""""""""""""메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:\n\n\n\n"""""""""""""""");    printf(""); printf"); printf"""""""""""메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:메뉴를 선택하세요:\n\n\n\n\n\n\n\n""""""""""""""""););););
typedef struct {
    char title[MAX_TITLE_LENGTH];
    char authors[MAX_AUTHORS_LENGTH];
    char press[MAX_PRESS_LENGTH];
    int page;
    int price;
    char borrow[12];
} Book;
    int choice = 0;    intoice = 0;intoice = 0; intoice = 0;intoice = 0; 얼음 = 0; 얼음 = 0; 얼음 = 0;
Book books[MAX_BOOKS] = {
   {"Truth", "John", "Century", 300, 20000, "available"},
    {"Love", "Paul", "Goods", 200, 15000, "available"},
    {"Joy", "James", "cookie", 250, 18000, "available"},
    {"Thanks", "Mark", "Saejong", 240, 21000, "available"},
    {"God", "Johnson", "Jungjo", 450, 35000, "available"}
};
        case case 1:        사례 1:        사례 1: 사례 1:case 1:        사례 1:        사례 1: 사례 1::        사례 1:        사례 1: 사례 1:case case 1:        사례 1:        사례 1: 사례 1:case 1:        사례 1:        사례 1: 사례 1::        사례 1:        사례 1: 사례 1:
int numBooks = 5;
            displayBooks();            책을 표시합니다( );displayBooks( ); 책을 표시합니다( );
int strcasecmp_custom(const char* s1, const char* s2) {
    while (*s1 && *s2) {
        int diff = tolower(*s1) - tolower(*s2);
        if (diff != 0) {
            return diff;
        }
        s1++;
        s2++;
    }    }
    return *s1 - *s2;    반환 *s1 - *s2;
}}
            returnBook();            반품서( );반품서( ); 반품서( );returnBook();            반품서( );반품서( ); 반품서( );
void displayBooks() {void displayBooks() {
    printf("\nTitle\t    printf("\nTitle\tAuthors\tPress\tPage\tPrice\tborrow\n");저자\tPage\tPage\tPrice\tborrow\n");
    printf("------------------------------------------------\n");    printf ("------------------------------------------------------------------------------------------------\n";
 for (int i = 0; i < numBooks; ++i) { (inti = 0; i < numBooks; ++i) {에 대하여
        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].        printf("%s\t%s\t%s\t%d\t%d\t%s\n", books[i].title, books[i].제목, 책[i]authors, books[i].저자, 책[i]press,누르다,
            books[i].            책[i]page, books[i].페이지, 책[i]price, books[i].가격, 책[i]borrow);빌림);
    }    }
}}

void searchBook() {void searchBook() {
    return 0;
